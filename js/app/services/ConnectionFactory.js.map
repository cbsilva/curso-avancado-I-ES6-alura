{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["ConnectionFactory","stores","version","dbName","connection","close","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_createStores","e","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;AACC,IAAIA,oBAAqB,YAAY;;AAElC;;;;AAIA,QAAMC,SAAS,CAAC,aAAD,CAAf;AACA,QAAMC,UAAU,CAAhB;AACA,QAAMC,SAAS,YAAf;;AAEA,QAAIC,aAAa,IAAjB;AACA,QAAIC,QAAQ,IAAZ;;AAEC;AACA;AAEI,qCAAa;AAAA;;AAET,kBAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACH;;AALL;AAAA;AAAA,4CAO0B;;AAElB,uBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,wBAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBV,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEAQ,gCAAYI,eAAZ,GAA8B,aAAK;AAC/Bd,0CAAkBe,aAAlB,CAAgCC,EAAEC,MAAF,CAASC,MAAzC;AACH,qBAFD;;AAIAR,gCAAYS,SAAZ,GAAwB,aAAK;;AAE1B,4BAAI,CAACf,UAAL,EAAiB;AACbA,yCAAaY,EAAEC,MAAF,CAASC,MAAtB;;AAEAb,oCAAQD,WAAWC,KAAX,CAAiBe,IAAjB,CAAsBhB,UAAtB,CAAR;;AAEA;AACAA,uCAAWC,KAAX,GAAmB,YAAU;AACzB,sCAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACH,6BAFD;AAGH;;AAEAE,gCAAQJ,UAAR;AAEH,qBAfD;;AAiBAM,gCAAYW,OAAZ,GAAsB,aAAK;AACvBC,gCAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASO,KAArB;;AAEAf,+BAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACH,qBAJD;AAMH,iBA/BM,CAAP;AAiCH;AA1CL;AAAA;AAAA,0CA4CyBrB,UA5CzB,EA4CqC;AAC7BH,uBAAOyB,OAAP,CAAe,iBAAS;AACpB,wBAAItB,WAAWuB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAJ,EACAzB,WAAW0B,iBAAX,CAA6BD,KAA7B;;AAEAzB,+BAAW2B,iBAAX,CAA6BF,KAA7B,EAAoC,EAACG,eAAc,IAAf,EAApC;AACH,iBALD;AAOH;AApDL;AAAA;AAAA,8CAsD4B;;AAErB,oBAAI5B,UAAJ,EAAgB;AACZC;AACAD,iCAAa,IAAb;AACH;AAEH;AA7DL;;AAAA;AAAA;AAiEH,CA/EuB,EAAxB","file":"ConnectionFactory.js","sourcesContent":["\r\n var ConnectionFactory = (function () {\r\n\r\n    /**\r\n     * declaracao de variaveis locais\r\n     * Qdo utilizado const no ES6 não permite reatribuir valor\r\n     */\r\n    const stores = ['negociacoes'];\r\n    const version = 6;\r\n    const dbName = 'aluraframe'\r\n\r\n    var connection = null;\r\n    var close = null;\r\n\r\n     //transforma classe em modulo\r\n     return class ConnectionFactory {\r\n     \r\n         constructor(){\r\n     \r\n             throw new Error('Não é possivel criar instancias de ConnectionFactory');\r\n         }     \r\n     \r\n         static getConnection(){\r\n     \r\n             return new Promise((resolve, reject) => {\r\n     \r\n                 let openRequest = window.indexedDB.open(dbName, version);\r\n     \r\n                 openRequest.onupgradeneeded = e => {\r\n                     ConnectionFactory._createStores(e.target.result);\r\n                 }\r\n                 \r\n                 openRequest.onsuccess = e => {\r\n     \r\n                    if (!connection) {\r\n                        connection = e.target.result;\r\n\r\n                        close = connection.close.bind(connection);\r\n\r\n                        //monkey patch\r\n                        connection.close = function(){\r\n                            throw new Error('Você não pode fechar diretamente a conexão');\r\n                        }\r\n                    } \r\n                         \r\n                     resolve(connection);\r\n                     \r\n                 }\r\n                 \r\n                 openRequest.onerror = e => {\r\n                     console.log(e.target.error);\r\n                     \r\n                     reject(e.target.error.name);\r\n                 }\r\n                 \r\n             });\r\n             \r\n         }\r\n         \r\n         static _createStores(connection) {\r\n             stores.forEach(store => {\r\n                 if (connection.objectStoreNames.contains(store))\r\n                 connection.deleteObjectStore(store);\r\n                 \r\n                 connection.createObjectStore(store, {autoIncrement:true});                    \r\n             });\r\n     \r\n         }\r\n\r\n         static closeConnection(){\r\n\r\n            if (connection) {\r\n                close();\r\n                connection = null;\r\n            }\r\n\r\n         }\r\n     \r\n     \r\n     }\r\n }) ();\r\n\r\n\r\n\r\n"]}