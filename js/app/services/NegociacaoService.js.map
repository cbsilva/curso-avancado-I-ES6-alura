{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","get","then","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","console","log","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","arrayAchatado","array","concat","dado","negociacao","ConnectionFactory","getConnection","NegociacaoDao","conexao","dao","adiciona","apagaTodos","listaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService{\r\n\r\n    constructor(){\r\n        this._http = new HttpService();\r\n    }\r\n    \r\n    obterNegociacoesDaSemana() {       \r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));                  \r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel importar as negociações da semana');\r\n        });\r\n              \r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior(){\r\n    \r\n        return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));                  \r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel importar as negociações da semana anterior');\r\n        });        \r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada(){\r\n        \r\n        return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));                \r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel importar as negociações da semana retrasada');\r\n\r\n        });        \r\n    }\r\n\r\n    obterNegociacoes() {\r\n        return Promise.all([\r\n                this.obterNegociacoesDaSemana(),\r\n                this.obterNegociacoesDaSemanaAnterior(),\r\n                this.obterNegociacoesDaSemanaRetrasada()])\r\n            .then(periodos => {\r\n\r\n                let negociacoes = periodos\r\n                    .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n                    .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\r\n                return negociacoes;\r\n            }).catch(erro => {\r\n                throw new Error(erro)\r\n            });\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n\r\n        return ConnectionFactory\r\n               .getConnection()\r\n               .then(conexao => new NegociacaoDao(conexao))\r\n               .then(dao => dao.adiciona(negociacao))\r\n               .then(() => 'Negociação adicionada com sucesso!')\r\n               .catch(erro => {\r\n                   console.log(erro);\r\n                   throw new Error ('Não foi possivel adicionar negociação')\r\n               });\r\n    }\r\n\r\n    apaga() {\r\n        return ConnectionFactory\r\n                .getConnection()\r\n                .then(conexao => new NegociacaoDao(conexao))\r\n                .then(dao => dao.apagaTodos())\r\n                .then(() => 'Negociações apagadas com sucesso!')\r\n                .catch(erro => {\r\n                    console.log(erro)\r\n                    throw new Error('Não foi possivel apagar as negociações')\r\n                });\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory\r\n                .getConnection()\r\n                .then(conexao => new NegociacaoDao(conexao))\r\n                .then(dao => dao.listaTodos())\r\n                .catch(erro => {\r\n                    console.log(erro)\r\n                    throw new Error('Não foi possivel listar as negociações')\r\n                });\r\n    }\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes()   \r\n                .then(negociacoes => \r\n                      negociacoes.filter(negociacao => \r\n                        !listaAtual.some(negociacaoExistente =>\r\n                            JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n                ).catch(erro => {\r\n                    console.log(erro)\r\n                    throw new Error('Erro ao importar negociações')\r\n                });\r\n\r\n    }\r\n}"]}