{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","console","log","onerror","e","target","result","negociacoes","cursor","openCursor","atual","dado","value","push","_data","_quantidade","_valor","continue","error","name","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCACIC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAGQC,U,EAAW;AAAA;;AAGhB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,MAAKN,WAAL,CACKO,WADL,CACiB,CAAC,MAAKN,MAAN,CADjB,EACgC,WADhC,EAEKO,WAFL,CAEiB,MAAKP,MAFtB,EAGKQ,GAHL,CAGSP,UAHT,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;AACrBC,wCAAQC,GAAR,CAAY,qBAAZ;AACAR;AACH,6BAHD;;AAKAE,oCAAQO,OAAR,GAAkB,aAAK;AACnBF,wCAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,MAArB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAKH,yBAjBM,CAAP;AAkBH;;;iDAGW;AAAA;;AAER,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,cAAc,EAAlB;AACA,gCAAIC,SAAS,OAAKlB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACkB,WADlB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRkB,UAHQ,EAAb;;AAKAD,mCAAOR,SAAP,GAAmB,aAAK;;AAEpB,oCAAIU,QAAQN,EAAEC,MAAF,CAASC,MAArB;;AAEA,oCAAII,KAAJ,EAAU;AACN,wCAAIC,OAAOD,MAAME,KAAjB;;AAEAL,gDAAYM,IAAZ,CAAiB,IAAI1B,UAAJ,CAAewB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;;AAEAN,0CAAMO,QAAN;AACH,iCAND,MAMO;AACHvB,4CAAQa,WAAR;AACH;AAEJ,6BAdD;;AAgBAC,mCAAOL,OAAP,GAAiB,aAAK;AAClBF,wCAAQC,GAAR,CAAY,YAAYE,EAAEC,MAAF,CAASa,KAAT,CAAeC,IAAvC;AAEH,6BAHD;AAKH,yBA5BM,CAAP;AA+BH;;;iDAEY;AAAA;;AAET,+BAAO,IAAI1B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,OAAKN,WAAL,CACLO,WADK,CACO,CAAC,OAAKN,MAAN,CADP,EACqB,WADrB,EAELO,WAFK,CAEO,OAAKP,MAFZ,EAGL6B,KAHK,EAAd;;AAKAxB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,mCAAR,CAAL;AAAA,6BAApB;;AAEAE,oCAAQO,OAAR,GAAkB,aAAK;AACnBF,wCAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASa,KAArB;AACAvB,uCAAO,wCAAP;AACH,6BAHD;AAMH,yBAdM,CAAP;AAiBH","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from \"../models/Negociacao\";\r\nexport class NegociacaoDao{\r\n\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n\r\n    adiciona(negociacao){\r\n\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n                              .transaction([this._store], 'readwrite')\r\n                              .objectStore(this._store)\r\n                              .add(negociacao);\r\n            \r\n            request.onsuccess = e => {\r\n                console.log('Gravando na storage');\r\n                resolve();\r\n            }\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.result);\r\n                reject('Não foi possível adicionar a negociação');\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n    listaTodos(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let negociacoes = [];\r\n            let cursor = this._connection\r\n                .transaction([this._store],'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n    \r\n            cursor.onsuccess = e => {\r\n    \r\n                let atual = e.target.result;\r\n    \r\n                if (atual){\r\n                    let dado = atual.value;\r\n    \r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n    \r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n    \r\n            }\r\n    \r\n            cursor.onerror = e => {\r\n                console.log('Error: ' + e.target.error.name);\r\n    \r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    apagaTodos() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                    .transaction([this._store],'readwrite')\r\n                    .objectStore(this._store)\r\n                    .clear();\r\n    \r\n            request.onsuccess = e => resolve('Negociações apagadas com sucesso!');\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possivel apagar as negociações');\r\n            }\r\n        \r\n        \r\n        });\r\n\r\n\r\n    }\r\n\r\n}"]}