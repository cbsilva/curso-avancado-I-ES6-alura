{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","console","log","onerror","e","target","result","negociacoes","cursor","openCursor","atual","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","error","name","clear"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAGQC,U,EAAW;AAAA;;AAGhB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,MAAKN,WAAL,CACKO,WADL,CACiB,CAAC,MAAKN,MAAN,CADjB,EACgC,WADhC,EAEKO,WAFL,CAEiB,MAAKP,MAFtB,EAGKQ,GAHL,CAGSP,UAHT,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBC,4BAAQC,GAAR,CAAY,qBAAZ;AACAR;AACH,iBAHD;;AAKAE,wBAAQO,OAAR,GAAkB,aAAK;AACnBF,4BAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,MAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAKH,aAjBM,CAAP;AAkBH;;;qCAGW;AAAA;;AAER,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIY,cAAc,EAAlB;AACA,oBAAIC,SAAS,OAAKlB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACkB,WADlB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRkB,UAHQ,EAAb;;AAKAD,uBAAOR,SAAP,GAAmB,aAAK;;AAEpB,wBAAIU,QAAQN,EAAEC,MAAF,CAASC,MAArB;;AAEA,wBAAII,KAAJ,EAAU;AACN,4BAAIC,OAAOD,MAAME,KAAjB;;AAEAL,oCAAYM,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAP,8BAAMQ,QAAN;AACH,qBAND,MAMO;AACHxB,gCAAQa,WAAR;AACH;AAEJ,iBAdD;;AAgBAC,uBAAOL,OAAP,GAAiB,aAAK;AAClBF,4BAAQC,GAAR,CAAY,YAAYE,EAAEC,MAAF,CAASc,KAAT,CAAeC,IAAvC;AAEH,iBAHD;AAKH,aA5BM,CAAP;AA+BH;;;qCAEY;AAAA;;AAET,mBAAO,IAAI3B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,OAAKN,WAAL,CACLO,WADK,CACO,CAAC,OAAKN,MAAN,CADP,EACqB,WADrB,EAELO,WAFK,CAEO,OAAKP,MAFZ,EAGL8B,KAHK,EAAd;;AAKAzB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,mCAAR,CAAL;AAAA,iBAApB;;AAEAE,wBAAQO,OAAR,GAAkB,aAAK;AACnBF,4BAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASc,KAArB;AACAxB,2BAAO,wCAAP;AACH,iBAHD;AAMH,aAdM,CAAP;AAiBH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao{\r\n\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n\r\n    adiciona(negociacao){\r\n\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n                              .transaction([this._store], 'readwrite')\r\n                              .objectStore(this._store)\r\n                              .add(negociacao);\r\n            \r\n            request.onsuccess = e => {\r\n                console.log('Gravando na storage');\r\n                resolve();\r\n            }\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.result);\r\n                reject('Não foi possível adicionar a negociação');\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n    listaTodos(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let negociacoes = [];\r\n            let cursor = this._connection\r\n                .transaction([this._store],'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n    \r\n            cursor.onsuccess = e => {\r\n    \r\n                let atual = e.target.result;\r\n    \r\n                if (atual){\r\n                    let dado = atual.value;\r\n    \r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n    \r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n    \r\n            }\r\n    \r\n            cursor.onerror = e => {\r\n                console.log('Error: ' + e.target.error.name);\r\n    \r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    apagaTodos() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                    .transaction([this._store],'readwrite')\r\n                    .objectStore(this._store)\r\n                    .clear();\r\n    \r\n            request.onsuccess = e => resolve('Negociações apagadas com sucesso!');\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possivel apagar as negociações');\r\n            }\r\n        \r\n        \r\n        });\r\n\r\n\r\n    }\r\n\r\n}"]}