{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_ordemAtual","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","console","log","erro","texto","setInterval","importacoNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","apaga","esvazia","importa","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","a","b"],"mappings":";;;;;;IAAMA,oB;AAEF,oCAAc;AAAA;;AAEV,YAAIC,IAAIC,SAASC,aAAT,CAAuBC,IAAvB,CAA4BF,QAA5B,CAAR;;AAEA,aAAKG,UAAL,GAAkBJ,EAAE,OAAF,CAAlB;AACA,aAAKK,gBAAL,GAAwBL,EAAE,aAAF,CAAxB;AACA,aAAKM,WAAL,GAAmBN,EAAE,QAAF,CAAnB;;AAEA,aAAKO,iBAAL,GAAyB,IAAIC,IAAJ,CACrB,IAAIC,gBAAJ,EADqB,EAErB,IAAIC,eAAJ,CAAoBV,EAAE,kBAAF,CAApB,CAFqB,EAGrB,UAHqB,EAGV,SAHU,EAGA,QAHA,EAGU,cAHV,CAAzB;;AAMA,aAAKW,SAAL,GAAiB,IAAIH,IAAJ,CACb,IAAII,QAAJ,EADa,EAEb,IAAIC,YAAJ,CAAiBb,EAAE,eAAF,CAAjB,CAFa,EAEwB,OAFxB,CAAjB;;AAKA;AACA;AACA,aAAKc,WAAL,GAAmB,EAAnB;AACA,aAAKC,QAAL,GAAgB,IAAIC,iBAAJ,EAAhB;;AAEA,aAAKC,KAAL;AAGH;;;;gCAEO;AAAA;;AAEJ,iBAAKF,QAAL,CACKG,KADL,GAEKC,IAFL,CAEU;AAAA,uBAAeC,YAAYC,OAAZ,CAAoB;AAAA,2BACrC,MAAKd,iBAAL,CAAuBe,QAAvB,CAAgCC,UAAhC,CADqC;AAAA,iBAApB,CAAf;AAAA,aAFV,EAIKC,KAJL,CAIW,gBAAQ;AACXC,wBAAQC,GAAR,CAAYC,IAAZ;AACA,sBAAKhB,SAAL,CAAeiB,KAAf,GAAuBD,IAAvB;AAEH,aARL;;AAUAE,wBAAY,YAAM;AACd,sBAAKC,oBAAL;AACH,aAFD,EAEG,IAFH;AAIH;;AAED;;;;;;;;iCAMSC,K,EAAO;AAAA;;AAEZA,kBAAMC,cAAN;;AAEA,gBAAIT,aAAa,KAAKU,eAAL,EAAjB;;AAEA,iBAAKlB,QAAL,CACKmB,QADL,CACcX,UADd,EAEKJ,IAFL,CAEU,oBAAY;AACd,uBAAKZ,iBAAL,CAAuBe,QAAvB,CAAgCC,UAAhC;AACA,uBAAKZ,SAAL,CAAeiB,KAAf,GAAwBO,QAAxB;AACA,uBAAKC,gBAAL;AACH,aANL,EAMOZ,KANP,CAMa;AAAA,uBAAQ,OAAKb,SAAL,CAAeiB,KAAf,GAAuBD,IAA/B;AAAA,aANb;AAQH;;;gCAEM;AAAA;;AAEH,iBAAKZ,QAAL,CACKsB,KADL,GAEKlB,IAFL,CAEU,oBAAY;AACd,uBAAKZ,iBAAL,CAAuB+B,OAAvB;AACA,uBAAK3B,SAAL,CAAeiB,KAAf,GAAuBO,QAAvB;AAEH,aANL,EAMOX,KANP,CAMa,gBAAQ;AACbC,wBAAQC,GAAR,CAAYC,IAAZ;AACA,uBAAKhB,SAAL,CAAeiB,KAAf,GAAuBD,IAAvB;AACH,aATL;AAUH;;;+CAEqB;AAAA;;AAElB,iBAAKZ,QAAL,CACKwB,OADL,CACa,KAAKhC,iBAAL,CAAuBa,WADpC,EAEKD,IAFL,CAEU;AAAA,uBAAeC,YAAYC,OAAZ,CAAoB,sBAAc;AACnD,2BAAKd,iBAAL,CAAuBe,QAAvB,CAAgCC,UAAhC;AACA,2BAAKZ,SAAL,CAAeiB,KAAf,GAAuB,qCAAvB;AACH,iBAHoB,CAAf;AAAA,aAFV,EAKQJ,KALR,CAKc;AAAA,uBAAQ,OAAKb,SAAL,CAAeiB,KAAf,GAAuBD,IAA/B;AAAA,aALd;AAMH;;AAGD;;;;;;0CAGkB;;AAEd,mBAAO,IAAIa,UAAJ,CACAC,WAAWC,aAAX,CAAyB,KAAKtC,UAAL,CAAgBuC,KAAzC,CADA,EAEAC,SAAS,KAAKvC,gBAAL,CAAsBsC,KAA/B,CAFA,EAGAE,WAAW,KAAKvC,WAAL,CAAiBqC,KAA5B,CAHA,CAAP;AAKH;;AAED;;;;;;2CAImB;;AAEf,iBAAKvC,UAAL,CAAgBuC,KAAhB,GAA8B,EAA9B;AACA,iBAAKtC,gBAAL,CAAsBsC,KAAtB,GAA8B,CAA9B;AACA,iBAAKrC,WAAL,CAAiBqC,KAAjB,GAA8B,GAA9B;;AAEA,iBAAKvC,UAAL,CAAgB0C,KAAhB;AACH;;AAED;;;;;;;;+BAMOC,M,EAAO;AACV,gBAAI,KAAKjC,WAAL,GAAmBiC,MAAvB,EAA+B;AAC3B,qBAAKxC,iBAAL,CAAuByC,YAAvB;AACH,aAFD,MAEQ;AACJ,qBAAKzC,iBAAL,CAAuB0C,MAAvB,CAA8B,UAACC,CAAD,EAAIC,CAAJ;AAAA,2BAAUD,EAAEH,MAAF,IAAYI,EAAEJ,MAAF,CAAtB;AAAA,iBAA9B;AACH;;AAED,iBAAKjC,WAAL,GAAmBiC,MAAnB;AAEH;;;uCAEc;AACX,iBAAKxC,iBAAL,CAAuByC,YAAvB;AACH","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\r\n\r\n    constructor (){\r\n\r\n        let $ = document.querySelector.bind(document);\r\n\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n        \r\n        this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(),\r\n            new NegociacoesView($('#negociacoesView')),\r\n            'adiciona','esvazia','ordena', 'inverteOrdem'\r\n        );        \r\n            \r\n        this._mensagem = new Bind(\r\n            new Mensagem(),\r\n            new MensagemView($('#mensagemView')),'texto'\r\n        );   \r\n            \r\n        //Quando a página for carregada, não tem critério. \r\n        //Só passa a ter quando ele começa a clicar nas colunas\r\n        this._ordemAtual = '';\r\n        this._service = new NegociacaoService();\r\n\r\n        this._init();\r\n\r\n       \r\n    }\r\n\r\n    _init() {\r\n\r\n        this._service   \r\n            .lista()     \r\n            .then(negociacoes => negociacoes.forEach(negociacao => \r\n                this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                this._mensagem.texto = erro;\r\n                \r\n            });           \r\n\r\n        setInterval(() => {\r\n            this.importacoNegociacoes();            \r\n        }, 5000);\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} event\r\n     * Método adiciona negociacoes \r\n     */\r\n\r\n    adiciona(event) {        \r\n\r\n        event.preventDefault();  \r\n\r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto  = mensagem;\r\n                this._limpaFormulario();\r\n            }).catch(erro => this._mensagem.texto = erro);       \r\n             \r\n    }\r\n\r\n    apaga(){        \r\n\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.esvazia();\r\n                this._mensagem.texto = mensagem;       \r\n\r\n            }).catch(erro => {\r\n                console.log(erro);\r\n                this._mensagem.texto = erro;\r\n            });      \r\n    }\r\n\r\n    importacoNegociacoes(){    \r\n        \r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => negociacoes.forEach(negociacao => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = 'Negociações importadas com sucesso.';\r\n            })).catch(erro => this._mensagem.texto = erro);                   \r\n    }\r\n\r\n    \r\n    /**\r\n     * Método privado para criar negociacao\r\n     */\r\n    _criaNegociacao() {\r\n\r\n        return new Negociacao(\r\n               DateHelper.textoParaData(this._inputData.value),\r\n               parseInt(this._inputQuantidade.value),\r\n               parseFloat(this._inputValor.value)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Método privado para limpar formulário\r\n     */\r\n\r\n    _limpaFormulario() {\r\n\r\n        this._inputData.value       = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value      = 0.0;\r\n\r\n        this._inputData.focus();       \r\n    } \r\n\r\n    /**\r\n     * Ordena a negociacao conforme coluna\r\n     * selecionada\r\n     * @param {string} coluna \r\n     */\r\n    \r\n    ordena(coluna){\r\n        if (this._ordemAtual = coluna) {\r\n            this._listaNegociacoes.inverteOrdem();\r\n        } else  {\r\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n        }\r\n\r\n        this._ordemAtual = coluna;\r\n\r\n    }\r\n\r\n    inverteOrdem() {\r\n        this._listaNegociacoes.inverteOrdem();\r\n    }\r\n}"]}